Resources:
  lexrouterfunctionrole97610A2F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RouterStack/lex_router_function_role/Resource
  lexrouterfunctionroleDefaultPolicy6B25F446:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: lexrouterfunctionroleDefaultPolicy6B25F446
      Roles:
        - Ref: lexrouterfunctionrole97610A2F
    Metadata:
      aws:cdk:path: RouterStack/lex_router_function_role/DefaultPolicy/Resource
  lexrouterfunction81784BD6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: bb54202f110066e8845d36471f778a91b2b50181dfa11e9af6248f3918b8103b.zip
      Role:
        Fn::GetAtt:
          - lexrouterfunctionrole97610A2F
          - Arn
      Description: Typewriter AI Router for Telegram. Used to fulfill Lex intents.
      Environment:
        Variables:
          create_article_intent: typewriter_fulfullment_function
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
    DependsOn:
      - lexrouterfunctionroleDefaultPolicy6B25F446
      - lexrouterfunctionrole97610A2F
    Metadata:
      aws:cdk:path: RouterStack/lex-router-function/Resource
      aws:asset:path: /Users/shuraosipov/Documents/workspace/myrobot/router/lambda
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/zWNQQqDMBBFz+I+TkstpV1WoWuxB5AYUzs1mYCTUCR492qkq/f/H5h3gvMVjpn8cq76MTfYQXx6qUaxTm1EaSE2zmhRvSixdgbVvNU9LcJI2/US4iOQ8uhou/3zIrhoJbP2DPcNa4cyqFH7UrJeRBpX4YA0JIdmFyaVfJWjHvcv9ezfjg4F3OCSfRgxnwJ5tBqanT9MjCTKyAAAAA==
    Metadata:
      aws:cdk:path: RouterStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

